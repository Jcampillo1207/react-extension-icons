"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
function XmlIconSingleColor(props) {
    return React.createElement("svg", __assign({ xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 201 240", width: "1em", height: "1em" }, props),
        React.createElement("g", { clipPath: "url(#a)" },
            React.createElement("path", { fill: props.color || "#4690FF", d: "M140.1 49.24C134.633 49.2347 129.391 47.0606 125.525 43.1947C121.659 39.3288 119.485 34.0871 119.48 28.62V0H27.3398C20.2029 0 13.3581 2.83514 8.31152 7.88174C3.26492 12.9283 0.429687 19.773 0.429688 26.91V189.13C0.440286 196.26 3.28023 203.094 8.32568 208.132C13.3711 213.17 20.2098 216 27.3398 216H137.94C145.077 216 151.921 213.165 156.968 208.118C162.015 203.072 164.85 196.227 164.85 189.09V49.24H140.1Z", opacity: 0.3 }),
            React.createElement("path", { fill: props.color || "#4690FF", d: "M164.85 49.24H140.1C134.633 49.2347 129.391 47.0606 125.525 43.1947 121.659 39.3288 119.485 34.0871 119.48 28.62V0L164.85 49.24ZM184.37 170.6H59.3298C50.4601 170.6 43.2698 177.79 43.2698 186.66V223.94C43.2698 232.81 50.4601 240 59.3298 240H184.37C193.24 240 200.43 232.81 200.43 223.94V186.66C200.43 177.79 193.24 170.6 184.37 170.6Z" }),
            React.createElement("path", { fill: "#fff", d: "M81.2698 213.37V220.64H73.7397V213.37H81.2698ZM103.3 220.64 96.9597 211.28 91.5198 220.64H83.1797L92.7998 205.16 82.8896 190.57H91.5198L97.6897 199.63 103 190.57H111.3L101.81 205.71 111.94 220.64H103.3ZM148.56 190.78V220.64H141.28V202L134.82 220.67H128.52L122.02 201.96V220.67H114.74V190.81H123.63L131.76 211.61 139.71 190.81 148.56 190.78ZM160.85 215.07H170.55V220.64H153.55V190.57H160.83L160.85 215.07Z" }),
            React.createElement("path", { fill: props.color || "#4690FF", d: "M40.9397 114.19C40.9258 113.76 41.0562 113.338 41.3098 112.99 41.6132 112.601 41.9778 112.263 42.3897 111.99 43.0135 111.667 43.6585 111.387 44.3199 111.15L46.2498 110.35 53.9698 107.1C55.0431 106.6 57.0431 105.767 59.9698 104.6L63.6397 103.1 64.9597 102.63 65.1897 102.53C65.2524 102.517 65.317 102.517 65.3797 102.53 65.5277 102.465 65.688 102.431 65.8499 102.43 66.1596 102.413 66.4695 102.458 66.7615 102.563 67.0535 102.668 67.3216 102.83 67.5498 103.04 67.7434 103.223 67.8973 103.443 68.0022 103.687 68.1072 103.931 68.1607 104.194 68.1597 104.46V107C68.1502 107.472 68.0044 107.93 67.7398 108.32 67.4616 108.756 67.0465 109.087 66.5598 109.26L50.7898 115.71 66.5598 122.16C67.0293 122.354 67.4372 122.672 67.7398 123.08 68.0147 123.454 68.1619 123.906 68.1597 124.37V126.91C68.16 127.179 68.1061 127.445 68.0012 127.692 67.8964 127.94 67.743 128.164 67.5498 128.35 67.3253 128.567 67.0582 128.735 66.7657 128.843 66.4731 128.952 66.1614 128.998 65.8499 128.98 65.6891 128.979 65.5297 128.948 65.3797 128.89L64.9597 128.75 63.6397 128.28 59.9998 126.8 53.9998 124.31 46.2798 121.06 44.3499 120.26C43.7299 120.01 43.0797 119.73 42.4197 119.41 42.0101 119.219 41.6594 118.922 41.4043 118.549 41.1492 118.176 40.9992 117.741 40.9698 117.29L40.9397 114.19ZM88.0498 131.7C87.5493 131.712 87.0545 131.592 86.6155 131.351 86.1764 131.111 85.8088 130.758 85.5498 130.33 85.335 130.021 85.1634 129.685 85.0398 129.33L84.7097 128.44 77.5098 112.53 76.9897 111.35C76.3897 110.07 75.2298 107.53 73.5098 103.73 71.2764 98.8965 70.1597 96.2465 70.1597 95.7798 70.16 95.4986 70.2242 95.2212 70.3472 94.9683 70.4701 94.7154 70.6489 94.4937 70.8699 94.3198 71.3688 93.898 72.0067 93.677 72.6597 93.6999H74.9998C75.4928 93.6913 75.9793 93.8136 76.4097 94.0543 76.84 94.2949 77.1988 94.6454 77.4497 95.0698L77.9697 96.0698 78.2998 96.9598 80.1797 101.1 85.4998 112.87 86.1997 114.37 89.4998 121.62C90.7648 124.221 91.8801 126.892 92.8398 129.62 92.8381 129.899 92.7733 130.175 92.6504 130.426 92.5275 130.677 92.3493 130.897 92.1296 131.07 91.6312 131.493 90.993 131.714 90.3398 131.69L88.0498 131.7ZM96.7597 129C96.4404 129.021 96.1201 128.975 95.819 128.867 95.5179 128.759 95.2425 128.589 95.0097 128.37 94.625 127.989 94.4057 127.471 94.3996 126.93V124.39C94.395 123.929 94.535 123.478 94.7997 123.1 95.0989 122.68 95.5168 122.36 95.9997 122.18L111.82 115.73 95.9997 109.29C95.5193 109.08 95.1122 108.732 94.8297 108.29 94.5572 107.91 94.407 107.457 94.3996 106.99V104.41C94.3962 104.146 94.4479 103.884 94.5512 103.642 94.6545 103.399 94.8072 103.18 94.9997 103 95.4697 102.577 96.0882 102.358 96.7196 102.39 96.8658 102.387 97.0102 102.422 97.1396 102.49 97.2256 102.475 97.3136 102.475 97.3996 102.49L97.6098 102.59C97.5498 102.59 97.9695 102.71 98.8795 103.06L102.6 104.56C102.406 104.473 104.406 105.306 108.6 107.06 110.886 108 113.506 109.113 116.46 110.4L117.21 110.68 118.29 111.11C118.926 111.336 119.542 111.617 120.13 111.95 120.55 112.141 120.908 112.446 121.166 112.829 121.424 113.212 121.57 113.659 121.59 114.12V117.22C121.581 117.645 121.441 118.057 121.19 118.4 120.91 118.788 120.548 119.109 120.13 119.34 119.56 119.62 118.89 119.92 118.13 120.24L116.13 121.04 98.7096 128.33C98.2096 128.58 97.9097 128.74 97.8197 128.8L97.6295 128.94 96.7597 129Z" })),
        React.createElement("defs", null,
            React.createElement("clipPath", { id: "a" },
                React.createElement("path", { fill: "#fff", d: "M0 0H200V240H0z", transform: "translate(.43)" }))));
}
exports.default = XmlIconSingleColor;
